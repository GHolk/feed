<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title><![CDATA[卡斯伯 Blog - 前端，沒有極限]]></title>
        <description><![CDATA[前端工程師，有關 CSS、javascript]]></description>
        <link>http://wcc723.github.io/</link>
        <image>
            <url>http://wcc723.github.io/images/casper_blog.svg</url>
            <title>卡斯伯 Blog - 前端，沒有極限</title>
            <link>http://wcc723.github.io/</link>
        </image>
        <generator>anafeed: power by npm/RSS, npm/JSDOM, node.js</generator>
        <lastBuildDate>Wed, 26 Aug 2020 16:27:53 GMT</lastBuildDate>
        <atom:link href="http://gholk.github.io/feed/wcc723.rss" rel="self" type="application/rss+xml"/>
        <pubDate>Sat, 20 Oct 2018 00:00:00 GMT</pubDate>
        <language><![CDATA[zh-TW]]></language>
        <managingEditor><![CDATA[卡斯伯 casper wcc723]]></managingEditor>
        <webMaster><![CDATA[gholk]]></webMaster>
        <docs>http://gholk.github.io/feed/</docs>
        <ttl>1440</ttl>
        <category><![CDATA[front-end]]></category>
        <category><![CDATA[javascript]]></category>
        <category><![CDATA[css]]></category>
        <category><![CDATA[html]]></category>
        <item>
            <title><![CDATA[
        完全解析 JavaScript import、export
        ]]></title>
            <description><![CDATA[
            import、export 是 JavaScript 模組管理的方法，可以將每個檔案視為一個獨立的模組匯出，並在另一個檔案匯入使用。透過此方式每個檔案更能專注在特定的功能上，且能避免單一檔案過度龐大。
相容性介紹此方法前，還是要了解一下相容性，目前來說許多主流瀏覽器都是可以運行的，但是寫法需要稍做調整，而 Node.js 則是要到 13.2 才可直接運行模組化。

瀏覽器中運行如果要在瀏覽器運行模
        ]]></description>
            <link>https://wcc723.github.io/development/2020/03/25/import-export/</link>
            <guid isPermaLink="true">https://wcc723.github.io/development/2020/03/25/import-export/</guid>
            <category><![CDATA[
            development
            ]]></category>
            <pubDate>Tue, 24 Mar 2020 16:00:00 GMT</pubDate>
            <enclosure url="https://firebasestorage.googleapis.com/v0/b/casper-de5d5.appspot.com/o/images%2Fblog%2F202003%2Fimg-import-export.png?alt=media&amp;token=b0833260-7033-4045-bd6d-4e74df3f6ad5" length="0" type="image"/>
        </item>
        <item>
            <title><![CDATA[
        開公司的流程及雷點分享
        ]]></title>
            <description><![CDATA[
            這次跟大家分享開公司上的一些心得，由於網路上可以找到許多開公司的流程，本篇會著重在心得的分享，當然我也並非專業的會計、法務，正確的流程建議可以詢問合作的會計。
會計開公司如果要省時間，找一個好會計是必要的，因為開公司在學校並非必修課程，大部分人都不會有開公司的經驗，雖然說是「開公司」但林林總總的項目非常多，除了公司設立外還有包含發票、營業稅、勞健保這些項目都是需要獨立申請，如果沒有一個人引導將會花
        ]]></description>
            <link>https://wcc723.github.io/business/2020/03/18/how-to-register-a-company/</link>
            <guid isPermaLink="true">https://wcc723.github.io/business/2020/03/18/how-to-register-a-company/</guid>
            <category><![CDATA[
            business
            ]]></category>
            <pubDate>Tue, 17 Mar 2020 16:00:00 GMT</pubDate>
            <enclosure url="https://firebasestorage.googleapis.com/v0/b/casper-de5d5.appspot.com/o/images%2Fblog%2F202003%2Fimg-register-company.png?alt=media&amp;token=c128c4a8-c657-4ffe-a872-03238d3c793f" length="0" type="image"/>
        </item>
        <item>
            <title><![CDATA[
        Flex 空間計算規則
        ]]></title>
            <description><![CDATA[
            此篇是延續先前的 Flex 的文章（圖解：CSS Flex 屬性一點也不難），本篇則是著重在 flex 中的 flex-grow、flex-shrink 和 flex-basis 這三個屬性，如果對於 Flex 基礎尚不熟悉的可先閱讀前一篇文章。
首先，回顧下先前的三個屬性介紹：
flex 是縮寫，裡面依序包含三個屬性 flex-grow、flex-shrink 和 flex-basis。

fl
        ]]></description>
            <link>https://wcc723.github.io/css/2020/03/08/flex-size/</link>
            <guid isPermaLink="true">https://wcc723.github.io/css/2020/03/08/flex-size/</guid>
            <category><![CDATA[
            css
            ]]></category>
            <pubDate>Sat, 07 Mar 2020 16:00:00 GMT</pubDate>
            <enclosure url="https://firebasestorage.googleapis.com/v0/b/casper-de5d5.appspot.com/o/images%2Fblog%2F202003%2Fflex-cover.png?alt=media&amp;token=ce7a29ec-255b-40b3-a724-33dd4407ee2c" length="0" type="image"/>
        </item>
        <item>
            <title><![CDATA[
        爬蟲、E2E 測試兩相宜的好工具 - Puppeteer
        ]]></title>
            <description><![CDATA[
            Puppeteer 是 Node.js 的函式庫，它提供各種 API 來控制 Chrome 或 Chromium 瀏覽器，而此瀏覽器也是目前主流的瀏覽器，用來做為測試、爬蟲都相當合適，並且所提供的 API 語法淺顯易懂，只要具有 jQuery 的使用經驗就可以很快速地上手。
安裝官方提供兩個版本，一個包含 Chromium，另一個則無，如果有安裝 Chrome 的情況下可以不需要另外下載 Chro
        ]]></description>
            <link>https://wcc723.github.io/development/2020/03/01/puppeteer/</link>
            <guid isPermaLink="true">https://wcc723.github.io/development/2020/03/01/puppeteer/</guid>
            <category><![CDATA[
            development
            ]]></category>
            <pubDate>Sat, 29 Feb 2020 16:00:00 GMT</pubDate>
            <enclosure url="https://firebasestorage.googleapis.com/v0/b/casper-de5d5.appspot.com/o/images%2Fblog%2F202003%2Fimg-puppeteer.png?alt=media&amp;token=42d44728-9eaf-42b3-8be2-fd62d0795dd0" length="0" type="image"/>
        </item>
        <item>
            <title><![CDATA[
        CSS Border 運用技巧（手繪框線、三角形、空間運用）
        ]]></title>
            <description><![CDATA[
            CSS Border 大部份來說是用在裝飾上，卡片的邊線、hover 的視覺效果、物件之間的間隔等等，這些視覺效果除了 Border 以外亦有其它方式可以達到；雖然如此，Border 的使用率還是比較高，因為相對來說更為簡單方便，不過也別這樣小看它，透過一些小技巧時，Border 還有很多靈活運用的方式。
基本觀念介紹先了解 Border 基本的觀念，有助於接下來的靈活運用。
Border 具有空
        ]]></description>
            <link>https://wcc723.github.io/css/2020/02/21/css-border/</link>
            <guid isPermaLink="true">https://wcc723.github.io/css/2020/02/21/css-border/</guid>
            <category><![CDATA[
            css
            ]]></category>
            <pubDate>Thu, 20 Feb 2020 16:00:00 GMT</pubDate>
            <enclosure url="https://firebasestorage.googleapis.com/v0/b/casper-de5d5.appspot.com/o/images%2Fblog%2F202002%2Fimg-border.png?alt=media&amp;token=a2b06e55-8ca4-4e1a-a52d-f19aa0942437" length="0" type="image"/>
        </item>
        <item>
            <title><![CDATA[
        JavaScript Promise 全介紹
        ]]></title>
            <description><![CDATA[
            最近直播介紹如何串接開源資料，也剛好許多朋友詢問到 Ajax、Promise 相關的問題，因此重新撰寫一篇文來介紹 Promise，這篇文章也與過去形勢不太一樣，試著先將常見的問題放在前頭，接下來才開始介紹 Promise。
另外本文的內容較多，Promise 想看簡易版可參考：/javascript/2017/12/29/javascript-proimse/。




使用 Vuejs 結合 
        ]]></description>
            <link>https://wcc723.github.io/development/2020/02/16/all-new-promise/</link>
            <guid isPermaLink="true">https://wcc723.github.io/development/2020/02/16/all-new-promise/</guid>
            <category><![CDATA[
            development
            ]]></category>
            <pubDate>Sat, 15 Feb 2020 16:00:00 GMT</pubDate>
            <enclosure url="https://firebasestorage.googleapis.com/v0/b/casper-de5d5.appspot.com/o/images%2Fblog%2F202002%2Fimg-promise-Saint-Seiya.png?alt=media&amp;token=6efc3208-ad24-41f7-a20d-bc8ddabaeef9" length="0" type="image"/>
        </item>
        <item>
            <title><![CDATA[
        單元測試 - 非同步及 Ajax
        ]]></title>
            <description><![CDATA[
            本篇延續上一篇：十分鐘上手前端單元測試 - 使用 Jest
JavaScript 是屬於同步，單執行緒的程式語言，因此當有非同步的事件時就會被往放到事件佇列，直到所有程式碼運行過後才會執行事件佇列內的程式，如果不熟悉這段觀念就會使程式的運行不符合預期，相關概念可以看此文章一次只能做一件事情的 JavaScript。
另外，現在的非同步大多都使用 Promise 來撰寫，包含 ES6 的 Fetch
        ]]></description>
            <link>https://wcc723.github.io/development/2020/02/09/jest-async/</link>
            <guid isPermaLink="true">https://wcc723.github.io/development/2020/02/09/jest-async/</guid>
            <category><![CDATA[
            development
            ]]></category>
            <pubDate>Sat, 08 Feb 2020 16:00:00 GMT</pubDate>
            <enclosure url="https://firebasestorage.googleapis.com/v0/b/casper-de5d5.appspot.com/o/images%2Fblog%2F202002%2Fimg-jest-async.png?alt=media&amp;token=93d54d69-2808-4f8a-91df-c84dd2f9629a" length="0" type="image"/>
        </item>
        <item>
            <title><![CDATA[
        十分鐘上手前端單元測試 - 使用 Jest
        ]]></title>
            <description><![CDATA[
            隨著應用程式越來越大，人工流程的測試也會耗去許多的時間，許多功能再開發後都必須重新進行點擊特定目標、撰寫複雜表單、送出來檢驗功能的正確性，當功能越來越複雜時，人工測試所花的時間也會越來越常，因此改用測試工具相對會節省去許多時間。尤其到了上線時才發現錯誤，那時候心中真的會吶喊 No、No、No～。
前端的測試常見的有兩大類別：

Unit Test：中文稱為單元測試，是以一個行為進行測試，可驗證運行
        ]]></description>
            <link>https://wcc723.github.io/development/2020/02/02/jest-intro/</link>
            <guid isPermaLink="true">https://wcc723.github.io/development/2020/02/02/jest-intro/</guid>
            <category><![CDATA[
            development
            ]]></category>
            <pubDate>Sat, 01 Feb 2020 16:00:00 GMT</pubDate>
            <enclosure url="https://firebasestorage.googleapis.com/v0/b/casper-de5d5.appspot.com/o/images%2Fblog%2F202002%2Fimg-jest.png?alt=media&amp;token=1809e129-03de-4f61-9a13-f8753ddf1786" length="0" type="image"/>
        </item>
        <item>
            <title><![CDATA[
        前端開發者，圖片常犯的五個粗心錯誤
        ]]></title>
            <description><![CDATA[
            前端開發者是透過程式碼將資訊呈現成畫面，因此畫面的好壞也多少影響品質，在觀看許多履歷或作業的過程中，會發現許多相似的錯誤，而這些錯誤都是有跡可循，並且可以避免的；本篇先以常見的圖片問題與大家分享，看是否你也犯了這些錯誤呢？
一、圖片變形新手錯誤率：⭐⭐⭐⭐令人感受的粗心度：👎👎👎👎
圖片變形是最明顯的錯誤，大部分的使用者都能看到這樣的問題，而這些問題會讓人感受到開發者的不細心。
要避免圖片
        ]]></description>
            <link>https://wcc723.github.io/development/2020/01/04/image-common-mistakes/</link>
            <guid isPermaLink="true">https://wcc723.github.io/development/2020/01/04/image-common-mistakes/</guid>
            <category><![CDATA[
            development
            ]]></category>
            <pubDate>Fri, 03 Jan 2020 16:00:00 GMT</pubDate>
            <enclosure url="https://firebasestorage.googleapis.com/v0/b/casper-de5d5.appspot.com/o/images%2Fblog%2F202001%2Fimg-mistake.png?alt=media&amp;token=860cf55e-b433-44a0-925b-07849ad65d5f" length="0" type="image"/>
        </item>
        <item>
            <title><![CDATA[
        CSS 技巧：精簡語法操作暗色主題 - CSS Dark Mode
        ]]></title>
            <description><![CDATA[
            Mac 暗色主題推出後，就讓黑色控非常喜愛，而且這樣的暗色佈景使用起來更不傷眼。以我來說是比較喜歡在亮色的佈景下工作的，但暗主題的對於長期需要在電腦面前工作來說，真的相對輕鬆很多。雖然如此，也並非所有的介面都是有提供暗主題，以網頁來說就需要開發者另外定義暗主題才會進行切換（不使用任何瀏覽器插件的情況下）。
好在，暗色主題的語法相當容易，以下介紹如何作切換，並且會提供一個小技巧，只要透過短短的幾行就
        ]]></description>
            <link>https://wcc723.github.io/css/2019/12/22/css-dark-mode/</link>
            <guid isPermaLink="true">https://wcc723.github.io/css/2019/12/22/css-dark-mode/</guid>
            <category><![CDATA[
            css
            ]]></category>
            <pubDate>Sat, 21 Dec 2019 16:00:00 GMT</pubDate>
            <enclosure url="https://firebasestorage.googleapis.com/v0/b/casper-de5d5.appspot.com/o/images%2Fblog%2F201912%2Fcss-dark-mode.png?alt=media&amp;token=21ebdd56-5e42-4e4f-ab8d-c63e35d29637" length="0" type="image"/>
        </item>
    </channel>
</rss>