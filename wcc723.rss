<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title><![CDATA[卡斯伯 Blog - 前端，沒有極限]]></title>
        <description><![CDATA[前端工程師，有關 CSS、javascript]]></description>
        <link>http://wcc723.github.io/</link>
        <image>
            <url>http://wcc723.github.io/images/casper_blog.svg</url>
            <title>卡斯伯 Blog - 前端，沒有極限</title>
            <link>http://wcc723.github.io/</link>
        </image>
        <generator>anafeed: power by npm/RSS, npm/JSDOM, node.js</generator>
        <lastBuildDate>Mon, 19 Oct 2020 06:27:49 GMT</lastBuildDate>
        <atom:link href="http://gholk.github.io/feed/wcc723.rss" rel="self" type="application/rss+xml"/>
        <pubDate>Sat, 20 Oct 2018 00:00:00 GMT</pubDate>
        <language><![CDATA[zh-TW]]></language>
        <managingEditor><![CDATA[卡斯伯 casper wcc723]]></managingEditor>
        <webMaster><![CDATA[gholk]]></webMaster>
        <docs>http://gholk.github.io/feed/</docs>
        <ttl>1440</ttl>
        <category><![CDATA[front-end]]></category>
        <category><![CDATA[javascript]]></category>
        <category><![CDATA[css]]></category>
        <category><![CDATA[html]]></category>
        <item>
            <title><![CDATA[
        Async function / Await 深度介紹
        ]]></title>
            <description><![CDATA[
            非同步在前端的做法不斷的在進行優化調整，先前介紹過 Promise 可以解決非同步過度巢狀的問題，而本篇要介紹的 async function（非同步函式） 及 await 則可以將非同步的程式碼寫成類似同步的形式。 
Promise 與 async, awaitPromise 本篇不會詳細介紹，如果不熟悉可以先查看 本篇 文章，Promise 與非同步函式兩者是密不可分的，雖然 async fu
        ]]></description>
            <link>https://wcc723.github.io/development/2020/10/16/async-await/</link>
            <guid isPermaLink="true">https://wcc723.github.io/development/2020/10/16/async-await/</guid>
            <category><![CDATA[
            development
            ]]></category>
            <pubDate>Thu, 15 Oct 2020 16:00:00 GMT</pubDate>
            <enclosure url="https://firebasestorage.googleapis.com/v0/b/casper-de5d5.appspot.com/o/images%2Fblog%2Fawait.jpg?alt=media&amp;token=a8539023-9aff-4118-b80f-7344f2d02548" length="0" type="image"/>
        </item>
        <item>
            <title><![CDATA[
        VSCode JS 註解就是你的文件
        ]]></title>
            <description><![CDATA[
            在使用文字編輯器時，你是否有以下狀況呢？

搞不懂，為什麼文字編輯器總是沒跳提示
函式庫沒有安裝插件就不知道如何輸入
同事或過去自己寫的函式不知道在寫什麼，都要花上許多時間去理解
想要為函式補充註解，但不知道如何著手

那麼你可以試著使用 VSCode，強大的 Intellisense 搞定所有函式提示！
函式的提示使用 Sublime Text 或 Atom 時，當載入外部的套件需要加上文字提示
        ]]></description>
            <link>https://wcc723.github.io/development/2020/10/13/vscode-intellisense/</link>
            <guid isPermaLink="true">https://wcc723.github.io/development/2020/10/13/vscode-intellisense/</guid>
            <category><![CDATA[
            development
            ]]></category>
            <pubDate>Mon, 12 Oct 2020 16:00:00 GMT</pubDate>
            <enclosure url="https://firebasestorage.googleapis.com/v0/b/casper-de5d5.appspot.com/o/images%2Fblog%2Firon2020_28.jpg?alt=media&amp;token=6586b8c2-a8df-41a3-bb73-0ac0d344aee3" length="0" type="image"/>
        </item>
        <item>
            <title><![CDATA[
        純 CSS 毛玻璃特效 - backdrop-filter 屬性介紹
        ]]></title>
            <description><![CDATA[
            幾年前的 iOS、MacOS 更新以後，毛玻璃視覺效果越來越受到許多人喜愛，在使用毛玻璃以前，背景與主要的畫面區塊的風格整合是一件麻煩的事情，除了畫面的協調性外，還要維持資訊的傳達性。而毛玻璃可以讓背景的畫面霧化，凸顯上層的主要資訊，並讓背景與整體不致於產生衝突感。
網頁在套用毛玻璃的特效流程近年有大幅的簡化，過去在線上有介紹過 純 CSS 的毛玻璃的技法，是透過多層的偽元素搭配 filter 的
        ]]></description>
            <link>https://wcc723.github.io/development/2020/10/12/frosted-glass/</link>
            <guid isPermaLink="true">https://wcc723.github.io/development/2020/10/12/frosted-glass/</guid>
            <category><![CDATA[
            development
            ]]></category>
            <pubDate>Sun, 11 Oct 2020 16:00:00 GMT</pubDate>
            <enclosure url="https://firebasestorage.googleapis.com/v0/b/casper-de5d5.appspot.com/o/images%2Fblog%2Firon2020_27.jpg?alt=media&amp;token=1249e1f4-1fb9-48e7-a4b5-c450022a46dc" length="0" type="image"/>
        </item>
        <item>
            <title><![CDATA[
        新手前端也不該犯的錯：圖片變形
        ]]></title>
            <description><![CDATA[
            網頁常見錯誤的之一：圖片比例變形
當網頁有此錯誤時，會大大的降低網頁的畫面水平，如果是作為一個求職作品，也會被貼上 “不細心” 的標籤，本篇介紹幾種簡單的方式來解決此問題。
以下是原始圖片（圖片來自於 Unsplash，如果失連歡迎與我聯絡）。


.box {
  height: 400px !important;
  width: 100% !important;
}
.object-cove
        ]]></description>
            <link>https://wcc723.github.io/development/2020/10/11/img-cover/</link>
            <guid isPermaLink="true">https://wcc723.github.io/development/2020/10/11/img-cover/</guid>
            <category><![CDATA[
            development
            ]]></category>
            <pubDate>Sat, 10 Oct 2020 16:00:00 GMT</pubDate>
            <enclosure url="https://firebasestorage.googleapis.com/v0/b/casper-de5d5.appspot.com/o/images%2Fblog%2Firon2020_26.jpg?alt=media&amp;token=c70c3827-4da0-4b7c-bfcf-af46431d3c60" length="0" type="image"/>
        </item>
        <item>
            <title><![CDATA[
        Bootstrap 5 格線的運作原理
        ]]></title>
            <description><![CDATA[
            


.box {
  height: 100px;
  background-color: #69F0AE;
  display: flex;
  justify-content: center;
  align-items: center;
}


Bootstrap 4 中我經常會建議學員不要自行調整水平間距，因為在不熟悉的情況下這可能會造成許多額外的問題，常見的情況有：

整體的格線風格不
        ]]></description>
            <link>https://wcc723.github.io/development/2020/10/10/bootstrap-5-grid-whats-new/</link>
            <guid isPermaLink="true">https://wcc723.github.io/development/2020/10/10/bootstrap-5-grid-whats-new/</guid>
            <category><![CDATA[
            development
            ]]></category>
            <pubDate>Fri, 09 Oct 2020 16:00:00 GMT</pubDate>
            <enclosure url="https://firebasestorage.googleapis.com/v0/b/casper-de5d5.appspot.com/o/images%2Fblog%2Firon2020_25.jpg?alt=media&amp;token=12703e8e-5550-4cee-938c-e735d0d060f0" length="0" type="image"/>
        </item>
        <item>
            <title><![CDATA[
        怎樣也不會失手的 Bootstrap 格線運用技巧
        ]]></title>
            <description><![CDATA[
            


.box {
  height: 100px;
  background-color: #69F0AE;
}
.form-row>.col, .form-row>[class*=col-] {
  padding-right: 5px;
  padding-left: 5px;
}
.form-row {
  display: -ms-flexbox;
  display: flex;
  
        ]]></description>
            <link>https://wcc723.github.io/development/2020/10/09/bootstrap-grid/</link>
            <guid isPermaLink="true">https://wcc723.github.io/development/2020/10/09/bootstrap-grid/</guid>
            <category><![CDATA[
            development
            ]]></category>
            <pubDate>Thu, 08 Oct 2020 16:00:00 GMT</pubDate>
            <enclosure url="https://firebasestorage.googleapis.com/v0/b/casper-de5d5.appspot.com/o/images%2Fblog%2Firon2020_24.jpg?alt=media&amp;token=eff1db4b-9fc3-4683-9e84-7794b0c8a58a" length="0" type="image"/>
        </item>
        <item>
            <title><![CDATA[
        手把手自訂你的 Bootstrap 樣式
        ]]></title>
            <description><![CDATA[
            Bootstrap 在第四版以後在介紹文檔，說明自己是一個函式庫而不是框架。樣式的框架代表載入後都是基於此架構開發，無論是否喜歡特定的內容，都需要先全盤接受後再自行調整；而函式庫代表你可以選用自己喜歡的部份，並且調整成合適的樣式，相對於框架來說有更高的彈性。
本篇將會依據 Bootstrap 文檔及實戰的經驗，與大家分享開發中常用的客製化技巧，讓大家可以輕鬆的客製 Bootstrap 樣式。
對於
        ]]></description>
            <link>https://wcc723.github.io/development/2020/10/08/custom-bootstrap-style/</link>
            <guid isPermaLink="true">https://wcc723.github.io/development/2020/10/08/custom-bootstrap-style/</guid>
            <category><![CDATA[
            development
            ]]></category>
            <pubDate>Wed, 07 Oct 2020 16:00:00 GMT</pubDate>
            <enclosure url="https://firebasestorage.googleapis.com/v0/b/casper-de5d5.appspot.com/o/images%2Fblog%2Firon2020_23.jpg?alt=media&amp;token=57512023-4c18-42df-a2b6-e1521dc8caa8" length="0" type="image"/>
        </item>
        <item>
            <title><![CDATA[
        JS - for 迴圈與 forEach 有什麼不同
        ]]></title>
            <description><![CDATA[
            過去，當有一個陣列的內容需要依序取值時，都會使用 for... 迴圈(for loop)的形式將值一一取出，原始碼的結構如下：12345var array = ['小明', '杰倫', '漂亮阿姨', '小美']for (var i = 0; i < array.length; i++) {  cons
        ]]></description>
            <link>https://wcc723.github.io/development/2020/10/05/js-for-loop-vs-for-each/</link>
            <guid isPermaLink="true">https://wcc723.github.io/development/2020/10/05/js-for-loop-vs-for-each/</guid>
            <category><![CDATA[
            development
            ]]></category>
            <pubDate>Sun, 04 Oct 2020 16:00:00 GMT</pubDate>
            <enclosure url="https://firebasestorage.googleapis.com/v0/b/casper-de5d5.appspot.com/o/images%2Fblog%2Firon2020_20.jpg?alt=media&amp;token=fac330e3-b516-421d-b072-1ed4f70cab8a" length="0" type="image"/>
        </item>
        <item>
            <title><![CDATA[
        JS 常見陣列方法 [push(), unshift(), pop(), shift(), splice(), reverse(), concat(), include(), indexOf(), join()]
        ]]></title>
            <description><![CDATA[
            本篇陣列方法是延伸過去寫的 JavaScript 陣列處理方法，目前的框架主流觀念都是「關注點分離」，框架主要都是負責畫面上的渲染；資料面完全交由給原生的 JS 處理，因此，對於資料處理的語法就需要有更高的掌握度。
熟悉陣列的方法，自然對於處理資料上會更得心應手，而先前的「陣列處理方法」是著重在迴圈的運用，而本篇則是介紹其餘常用的部分，本篇所會介紹的方法包含：

push()
unshift()

        ]]></description>
            <link>https://wcc723.github.io/development/2020/10/04/js-array-methods/</link>
            <guid isPermaLink="true">https://wcc723.github.io/development/2020/10/04/js-array-methods/</guid>
            <category><![CDATA[
            development
            ]]></category>
            <pubDate>Sat, 03 Oct 2020 16:00:00 GMT</pubDate>
            <enclosure url="https://firebasestorage.googleapis.com/v0/b/casper-de5d5.appspot.com/o/images%2Fblog%2Firon2020_19.jpg?alt=media&amp;token=8d6a40c4-0b89-4e5c-b7cd-d512cc400264" length="0" type="image"/>
        </item>
        <item>
            <title><![CDATA[
        AJAX 完整解說系列：輕鬆搞懂 HTTP 狀態碼（HTTP Status Code）
        ]]></title>
            <description><![CDATA[
            AJAX 是前端與後端的介接，當跨越不同的環境時，所有的狀態會越來越難預期，接著就可能會發生錯誤，造成的錯誤狀態可能會如下：

流程與設計不同
資料格式不符合
連線失敗、網路不穩定
程式碼上的錯誤（這就不是本章節要討論的）

錯誤在開發的過程中是非常常見的，只不過我們在開發的過程中容易「忽視錯誤」僅以「最完美個過程」進行開發，這樣的結果會導致使用者不知道正遭遇在錯誤的狀態中而苦苦等待，所以錯誤一定
        ]]></description>
            <link>https://wcc723.github.io/development/2020/10/03/about-ajax-4/</link>
            <guid isPermaLink="true">https://wcc723.github.io/development/2020/10/03/about-ajax-4/</guid>
            <category><![CDATA[
            development
            ]]></category>
            <pubDate>Fri, 02 Oct 2020 16:00:00 GMT</pubDate>
            <enclosure url="https://firebasestorage.googleapis.com/v0/b/casper-de5d5.appspot.com/o/images%2Fblog%2Firon2020_18.jpg?alt=media&amp;token=ddebf02c-7873-436b-b737-04722e0981fc" length="0" type="image"/>
        </item>
    </channel>
</rss>